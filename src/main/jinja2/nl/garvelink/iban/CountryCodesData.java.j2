/*
   Copyright 2020 Barend Garvelink

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 */
package nl.garvelink.iban;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;

/**
 * Contains information about IBAN country codes. This is a generated file.
 * Updated to SWIFT IBAN Registry version {{ meta.iban_registry_version | escape }} on {{ meta.last_update | date_time_format("%Y-%m-%d") | escape }}.
 */
abstract class CountryCodesData {
    /**
     * The "yyyy-MM-dd" datestamp that the embedded IBAN data was updated.
     */
    static final String LAST_UPDATE_DATE = "{{ meta.last_update | date_time_format("%Y-%m-%d") | escape_java_string }}";
    /**
     * The revision of the SWIFT IBAN Registry to which the embedded IBAN data was updated.
     */
    static final String LAST_UPDATE_REV = "{{ meta.iban_registry_version | escape_java_string }}";

    static final int SEPA = 1 << 8;
    static final int SWIFT = 1 << 9;
    static final int REMOVE_METADATA_MASK = 0xFF;
    static final int BANK_IDENTIFIER_BEGIN_MASK = 0xFF;
    static final int BANK_IDENTIFIER_END_SHIFT = 8;
    static final int BANK_IDENTIFIER_END_MASK = 0xFF << BANK_IDENTIFIER_END_SHIFT;
    static final int BRANCH_IDENTIFIER_BEGIN_SHIFT = 16;
    static final int BRANCH_IDENTIFIER_BEGIN_MASK = 0xFF << BRANCH_IDENTIFIER_BEGIN_SHIFT;
    static final int BRANCH_IDENTIFIER_END_SHIFT = 24;
    static final int BRANCH_IDENTIFIER_END_MASK = 0xFF << BRANCH_IDENTIFIER_END_SHIFT;

    /**
     * Known country codes, this list must be sorted to allow binary search. All other lists in this file must use the
     * same indices for the same countries.
     */
    static final String[] COUNTRY_CODES = {
{%- for iban in ibans %}
        "{{ iban.country_code }}"{% if not loop.last %},{% endif %}{#
#}{% endfor %}
    };

    /**
     * Lengths for each country's IBAN. The indices match the indices of {@link #COUNTRY_CODES}, the values are the
     * expected length. Values may embed the {@link #SEPA} and {@link #SWIFT} flags to indicate the SEPA membership and
     * whether the record is listed in the SWIFT IBAN Registry.
     */
    static final int[] COUNTRY_IBAN_LENGTHS = {
{%- for iban in ibans %}
        /* {{ iban.country_code }} */ {{ iban.length }}{% if iban.flags.in_swift_registry %} | SWIFT{% endif %}{% if iban.flags.sepa_country %} | SEPA{% endif %}{#
#}{% if not loop.last %},{% endif %}{#
#}{% endfor %}
    };


    /**
     * Contains the start- and end-index (as per {@link String#substring(int, int)}) of the bank code and branch code
     * within a country's IBAN format. Mask:
     * <pre>
     * 0x000000FF <- begin offset bank id
     * 0x0000FF00 <- end offset bank id
     * 0x00FF0000 <- begin offset branch id
     * 0xFF000000 <- end offset branch id
     * </pre>
     */
    static final int[] BANK_CODE_BRANCH_CODE = {
{%- for iban in ibans %}
        /* {{ iban.country_code }} */
        {{ iban | flat_get("embeds.bank_code.position", 0) }}
        | ({{ iban | flat_get("embeds.bank_code.position", 0) }} + {{ iban | flat_get("embeds.bank_code.length", 0) }}) << BANK_IDENTIFIER_END_SHIFT
        | {{ iban | flat_get("embeds.branch_code.position", 0) }} << BRANCH_IDENTIFIER_BEGIN_SHIFT
        | ({{ iban | flat_get("embeds.branch_code.position", 0) }} + {{ iban | flat_get("embeds.branch_code.length", 0) }}) << BRANCH_IDENTIFIER_END_SHIFT{#
#}{% if not loop.last %},{% endif %}
{% endfor %}
    };

    /** Prevent instantiation of static utility class. */
    private CountryCodesData() { }
}
